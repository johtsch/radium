VAR:
    IP host 192.168.2.116;
    IP victim 192.168.2.1;
    PORT dport 8080;
    PORT sport 9999;
    PORT provoziert einen Fehler;
    PORT invRange 111111111111111;              # der zugewiesene Wert ist außerhalb des Wertebereichs
    HADDR sport "ff:ff:ff:ff:ff:ff";            # provoziert ebenfalls Warnung, da sport als Bezeichner schon verwendet wird
    HADDR tesmac "ff:ff:ff:ff:ff:ff";
    HADDR inv "a3:99:z2:ff:de::01";
    BYTE b1 256;
    BYTE b2 123;
    SHORT s1 64213;
    SHORT s2 2;
    INT i3 23;
    INT i8 1337;
:VAR

IMPLEMENTATION:

S[0]{50}:                          # S[0]==erster Step {50} bedeutet dass 50ms zwischen jeder Stepausführung stehen

    DESCRIPTION:
        Hier kann dann eine Beschreibung des aktuellen Schrittes stehen, die dann hoffentlich auch im Programm angezeigt werden kann ^^
    :DESCRIPTION

    ASSEMBLE[1]:
        L2:
            STD;                            # standard == ist mir egal was da hinkommt diese schicht ist unbedeutend
        :L2

        #Anmerkung: L1 kann nicht festgelegt werden und für L2 ist Ethernet festgelegt -> es kann nicht anders als STD; festgelegt werden!!

        L3[IPv4]:                           # IPv4 als Protokoll der 3.Schicht setzen        
            SIP=host;                       # die definierten Felder des IPv4-Headers zuweisen 
            DIP=victim;
            PROTO=TCP;
        :L3
        L4[TCP]:
            SPORT=sport;
            DPORT=dport;
            SEQ_NUM=1283891283 + 12;
            ACK_NUM=2189324743;
            FLAGS.SYN=1;
        :L4
        L5[DATA]:
            # wenn es einen Datenteil geben würde könnte das Kommando dazu so aussehen
            FILE="direction/to/file/containing/data";
        :L5
    :ASSEMBLE

    SEND(PACKET[1]);
:S
T[0]:                                       # T[1]==Trigger 1
    PACKETFILTER:
        L3[IPv4]:                           # das IPv4 Paket soll folgende Parameter erfüllen
            SOURCE=victim;
        :L3
    :PACKETFILTER
:T
S[1]:

:S

:IMPLEMENTATION
